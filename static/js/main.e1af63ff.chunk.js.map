{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","usersFromServer","find","undefined","App","useState","selectedTitle","setTitle","selectedUser","setUser","addNewTodo","setTodo","validationTitle","setValidationTitle","validationUser","setValidationUser","useEffect","action","method","onSubmit","eventOnSubmit","preventDefault","htmlFor","type","placeholder","value","onChange","eventOnChange","target","eventOnChage","onClick","findUser","newTodo","sort","a","b","length","newAdd","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1af63ff.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './type/User';\nimport { Todo } from './type/Todo';\n\nfunction getUser(userId: number): User | undefined {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || undefined;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [selectedTitle, setTitle] = useState('');\n  const [selectedUser, setUser] = useState('');\n  const [addNewTodo, setTodo] = useState(todos);\n  const [validationTitle, setValidationTitle] = useState(true);\n  const [validationUser, setValidationUser] = useState(true);\n\n  const clearFormField = () => {\n    setTitle('');\n    setUser('');\n  };\n\n  useEffect(() => {\n    return () => (\n      clearFormField()\n    );\n  }, [addNewTodo]);\n\n  useEffect(() => {\n    setValidationTitle(true);\n  }, [selectedTitle]);\n\n  useEffect(() => {\n    setValidationUser(true);\n  }, [selectedUser]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(eventOnSubmit) => {\n          eventOnSubmit.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleId\">\n            Title:\n          </label>\n          <input\n            id=\"titleId\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={selectedTitle}\n            onChange={eventOnChange => setTitle(eventOnChange.target.value)}\n          />\n          {!validationTitle\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelectId\">\n            User:\n          </label>\n          <select\n            id=\"userSelectId\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={eventOnChage => setUser(eventOnChage.target.value)}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {!validationUser\n          && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            const findUser = usersFromServer.find(\n              user => user.name === selectedUser,\n            );\n            const largeId = [...todos].sort(\n              (a, b) => a.id - b.id,\n            )[todos.length - 1].id;\n\n            const newTodo = {\n              id: largeId + 1,\n              title: selectedTitle,\n              completed: false,\n              userId: findUser?.id && undefined,\n              user: findUser,\n            };\n\n            const newAdd = [...addNewTodo];\n\n            newAdd.push(newTodo);\n\n            if ((selectedTitle && selectedUser)) {\n              setTodo(newAdd);\n            }\n\n            if (!selectedTitle) {\n              setValidationTitle(false);\n            }\n\n            if (!selectedUser) {\n              setValidationUser(false);\n            }\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={addNewTodo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}